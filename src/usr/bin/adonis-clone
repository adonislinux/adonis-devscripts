#!/bin/bash

jsonval() 
{
    echo `cat /var/tmp/repos | grep $prop` 
}

list()
{
    echo `cat /var/tmp/repos | grep "\"name\":"  | awk  '{ sub(/\"name\": /, ""); print}' | tr \", " "`
}

list-desc()
{
    echo `cat /var/tmp/repos | grep "\"description\":"  | awk  '{ sub(/\"description\": /, ""); print}'`
}

refresh()
{
    curl -s -X GET https://api.github.com/users/adonislinux/repos > /var/tmp/repos
}

usage()
{
    cat <<EOF
    Usage: ${0}  [ -h|--help --list --list-desc ] 
EOF
}

#If this is the first time this is being run, create the repo json file
if ! [ -f /var/tmp/repos ]; then
    refresh
fi

##Usage
if [ "${1}" = "--help" -o "${1}" = "-h" ]; then
    usage
    exit
fi
 
##List all repos
if [ "${1}" = "--list" -o "${1}" = "-l" ]; then
    repos=$(list)
    
    for repo in $repos ; do
	echo $repo 
    done
    
    exit
fi
  
##List all repos with descriptions
if [ "${1}" = "--descriptions" -o "${1}" = "-d" ]; then
    repos=$(list)
    repodesc=$(list-desc)
    count=1
for repod  in $repos ; do
    head=$repod
    desc=`echo $repodesc | cut -d',' -f$count`
    echo $head "-" $desc 
    count=$[$count +1]
done
fi

##Search for a property
if [ "${1}" = "--property" -o "${1}" = "-p" ]; then
    prop="\""${2}"\""
    values=$(jsonval)
    repos=$(list)
    IFS=","
    for value in $values ; do
	echo $value | xargs | cut -d' ' -f2 
    done    
    exit
fi

##Update repo list
if [ "${1}" = "--update" -o "${1}" = "-u" ]; then
    refresh
    exit
fi





###############
##Everything below this is test code and can be ignored
###############

#echo `list-desc`


json=`cat /var/tmp/repos`
prop="\"name\":"
#urls=`jsonval`

#repodesc=`list-desc`
#echo `list`
#repos=`list`
#echo $repos | sed s/,/\n/g
#IFS=","
# count=1

